{"version":3,"sources":["utils.js","components/header.js","hooks/useAnchorPosLeft.js","store/reducer.js","hooks/useDispatchHook.js","components/notes.js","hooks/useGenerateEvent.js","components/popover.js","components/buttons.js","components/main.js","components/app.js","store/index.js","index.js"],"names":["getDuration","oldDate","old","moment","now","Date","duration","diff","locale","humanize","Header","openPopover","lengthReadNotes","notes","filter","note","read","length","getLengthReadNotes","useSelector","state","className","IconButton","size","aria-label","color","onClick","Badge","badgeContent","useAnchorPosLeft","useState","window","innerWidth","anchorPosLeft","setAnchorPosLeft","useEffect","setPosAnchor","addEventListener","removeEventListener","notesSlice","createSlice","name","initialState","id","text","birth","reducers","addNote","action","payload","push","deleteNotes","markReadNotes","map","markReadNote","index","findIndex","el","slice","actions","useDispatchHook","dispatch","useDispatch","deleteAllNotes","markAllReadNotes","addNewNote","value","setValue","markNote","Notes","lastFiveNotes","getFiveLastNotes","Typography","sx","p","style","fontWeight","cursor","faker","useGenerateEvent","generateSendSentence","sentence","lorem","interval","setInterval","clearInterval","PopOver","anchorEl","closePopover","open","Boolean","undefined","Popover","anchorReference","anchorOrigin","vertical","horizontal","onClose","anchorPosition","top","left","textDecoration","variant","Buttons","btns","Stack","direction","spacing","btn","Button","Main","TextField","label","onChange","e","target","App","setAnchorEl","event","currentTarget","store","configureStore","reducer","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bc9fc9a.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport 'moment/locale/ru'\r\n\r\nexport const getLengthReadNotes = notes => notes.filter(note => note.read === false).length;\r\n\r\nexport const getDuration = oldDate => {\r\n\r\n    const old = moment(oldDate);\r\n    const now = moment(new Date());\r\n\r\n    const duration = moment.duration(-now.diff(old)).locale('ru');\r\n\r\n    return duration.humanize(true);\r\n};\r\n\r\nexport const getFiveLastNotes = notes => notes.slice(-5).map(note => ({...note, duration: getDuration(note.birth)}));\r\n\r\n\r\n","import {IconButton, Badge} from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport {useSelector} from 'react-redux';\r\nimport {getLengthReadNotes} from '../utils';\r\n\r\nconst Header = ({openPopover}) => {\r\n\r\n    const {notes} = useSelector(state => state);\r\n\r\n    const lengthReadNotes = getLengthReadNotes(notes);\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar_button\">\r\n                <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"show 17 new notifications\"\r\n                    color=\"inherit\"\r\n                    onClick={openPopover}\r\n                >\r\n                    <Badge badgeContent={lengthReadNotes} color=\"error\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Header;","import {useEffect, useState} from 'react';\r\n\r\nconst useAnchorPosLeft = () => {\r\n    const [anchorPosLeft, setAnchorPosLeft] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        const setPosAnchor = () => setAnchorPosLeft(window.innerWidth);\r\n        window.addEventListener('resize', setPosAnchor);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setPosAnchor);\r\n        }\r\n    }, [])\r\n\r\n    return anchorPosLeft;\r\n};\r\n\r\nexport default useAnchorPosLeft;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const initialState = {\r\n    notes: [\r\n        {id: 1, text: 'drink coffee', read: false, birth: '7-05-2010'},\r\n        {id: 2, text: 'walking in the street', read: true, birth: '1-01-2021'},\r\n        {id: 3, text: 'by tv set', read: false, birth: '10-1-2021'}\r\n    ]\r\n}\r\n\r\nexport const notesSlice = createSlice({\r\n    name: 'notes',\r\n    initialState,\r\n    reducers: {\r\n        addNote(state, action) {\r\n            const note = {\r\n                id: Date.now(),\r\n                text: action.payload,\r\n                read: false,\r\n                birth: Date.now()\r\n            }\r\n            state.notes.push(note)\r\n        },\r\n        deleteNotes(state) {\r\n            state.notes = []\r\n        },\r\n        markReadNotes(state) {\r\n            state.notes = state.notes.map(note => ({...note, read: true}))\r\n        },\r\n        markReadNote(state, action) {\r\n            const index = state.notes.findIndex(el => el.id === action.payload);\r\n            const note = state.notes[index];\r\n            state.notes = [\r\n                ...state.notes.slice(0, index),\r\n                {...note, read: true},\r\n                ...state.notes.slice(index+1)\r\n            ]\r\n        }\r\n    }\r\n})\r\n\r\nexport const {addNote, deleteNotes, markReadNotes, markReadNote} = notesSlice.actions;\r\n\r\nexport default notesSlice.reducer\r\n","import {useDispatch} from \"react-redux\";\r\nimport {addNote, deleteNotes, markReadNote, markReadNotes} from \"../store/reducer\";\r\n\r\nexport const useDispatchHook = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteAllNotes = () => dispatch(deleteNotes());\r\n    const markAllReadNotes = () => dispatch(markReadNotes());\r\n    const addNewNote = (value, setValue) => {\r\n        if (value) dispatch(addNote(value));\r\n        if (setValue) setValue('');\r\n    }\r\n    const markNote = id => dispatch(markReadNote(id));\r\n\r\n\r\n    return {deleteAllNotes, markAllReadNotes, addNewNote, markNote};\r\n}","import {Typography} from \"@mui/material\";\r\n\r\nimport {useDispatchHook} from \"../hooks/useDispatchHook\";\r\nimport {getFiveLastNotes} from \"../utils\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Notes = () => {\r\n\r\n    const {notes} = useSelector(state => state);\r\n\r\n    const lastFiveNotes = getFiveLastNotes(notes);\r\n\r\n    const {markNote} = useDispatchHook();\r\n\r\n    return <>\r\n        {lastFiveNotes.map(note =>\r\n            <div key={note.id} onClick={() => note.read ? null : markNote(note.id)}>\r\n                <Typography\r\n                    sx={{ p: 1 }}\r\n                    style={{fontWeight: note.read ? 400 : 600, cursor: note.read ? 'default' : 'pointer'}}\r\n                >\r\n                    {note.text}\r\n                </Typography>\r\n                <div className='duration'>{note.duration}</div>\r\n            </div>\r\n        )}\r\n        </>;\r\n};\r\n\r\nexport default Notes;","import {useEffect} from \"react\";\r\n\r\nimport {useDispatchHook} from './useDispatchHook';\r\n\r\nimport faker from 'faker';\r\n\r\nfaker.locale = 'ru';\r\n\r\nconst useGenerateEvent = () => {\r\n\r\n    const {addNewNote} = useDispatchHook();\r\n\r\n    const generateSendSentence = () => {\r\n        const sentence = faker.lorem.sentence();\r\n        addNewNote(sentence);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(generateSendSentence, 10000)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n};\r\n\r\nexport default useGenerateEvent;","import {Popover, Typography} from '@mui/material';\r\nimport {useSelector} from 'react-redux';\r\nimport useAnchorPosLeft from '../hooks/useAnchorPosLeft';\r\n\r\nimport Notes from './notes';\r\nimport useGenerateEvent from \"../hooks/useGenerateEvent\";\r\n\r\nconst PopOver = ({anchorEl, closePopover}) => {\r\n\r\n    useGenerateEvent();\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const style = {fontWeight: 600, cursor: 'pointer', textDecoration: 'underline'};\r\n\r\n    const anchorPosLeft = useAnchorPosLeft();\r\n\r\n    const {notes} = useSelector(state => state);\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                anchorReference=\"anchorPosition\"\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                onClose={closePopover}\r\n                anchorPosition={{ top: 50, left: anchorPosLeft }}\r\n\r\n            >\r\n                {notes.length ?\r\n                    <>\r\n                        <Notes/>\r\n                        <Typography\r\n                            sx={{ p: 1 }}\r\n                            style={style}\r\n                            onClick={closePopover}\r\n                        >\r\n                            посмотреть все...\r\n                        </Typography>\r\n                    </>\r\n                    :\r\n                    <Typography sx={{ p: 1 }} variant=\"h6\">События отсуствуют</Typography>}\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopOver;","import React from 'react';\r\nimport {Button, Stack} from \"@mui/material\";\r\nimport {useDispatchHook} from \"../hooks/useDispatchHook\";\r\n\r\nconst Buttons = ({openPopover}) => {\r\n\r\n    const {deleteAllNotes, markAllReadNotes} = useDispatchHook();\r\n\r\n    const btns = [\r\n        {id: 1, color: 'secondary', onClick: markAllReadNotes, text: 'Пометить все события прочитанными'},\r\n        {id: 2, color: 'error', onClick: deleteAllNotes, text: 'Удалить все события'},\r\n        {id: 3, color: 'warning', onClick: openPopover, text: 'Скрыть/показать попап нотификаций'},\r\n        ]\r\n\r\n    return (\r\n        <Stack direction=\"column\" spacing={1} className=\"main_buttons\">\r\n            {btns.map(btn =>\r\n                <Button\r\n                    key = {btn.id}\r\n                    color = {btn.color}\r\n                    variant=\"contained\"\r\n                    onClick={btn.onClick}\r\n                >\r\n                    {btn.text}\r\n                </Button>\r\n            )}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import {Button, Stack, TextField} from '@mui/material';\r\nimport {useState} from 'react';\r\nimport {useDispatchHook} from '../hooks/useDispatchHook';\r\n\r\nimport Buttons from './buttons';\r\n\r\nconst Main = ({openPopover}) => {\r\n\r\n    const {addNewNote} = useDispatchHook();\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const onChange = e => setValue(e.target.value);\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <Stack direction=\"row\" spacing={1} className=\"main_input-button\">\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Введите название события\"\r\n                    variant=\"outlined\"\r\n                    className=\"main_input\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    onClick={() => addNewNote(value, setValue)}\r\n                >\r\n                    Отправить\r\n                </Button>\r\n            </Stack>\r\n            <Buttons openPopover={openPopover}/>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import {useState} from 'react';\r\n\r\nimport Header from './header';\r\nimport PopOver from './popover';\r\nimport Main from './main';\r\n\r\nfunction App() {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const openPopover = (event) => setAnchorEl(event.currentTarget);\r\n\r\n    const closePopover = () => setAnchorEl(null);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header openPopover={openPopover}/>\r\n            <PopOver anchorEl={anchorEl} closePopover={closePopover}/>\r\n            <Main openPopover={openPopover} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport reducer from './reducer';\r\n\r\nexport const store = configureStore({\r\n    reducer,\r\n    composeWithDevTools,\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {store} from './store';\nimport {Provider} from 'react-redux';\n\nimport './index.sass';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}